name: Docusaurus PR Workflow

on:
  pull_request:
    types: [opened, synchronize, reopened]
  pull_request_target:
    types: [closed]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Debug Event
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "PR merged: ${{ github.event.pull_request.merged }}"
          echo "Base ref: ${{ github.event.pull_request.base.ref }}"
          echo "Head ref: ${{ github.event.pull_request.head.ref }}"

      - name: Fetch and checkout main for merged PRs
        if: github.event.pull_request.merged == true
        run: |
          git fetch origin main
          git checkout main
          git pull
          echo "Current branch: $(git branch --show-current)"
          echo "Latest commit: $(git log -1 --oneline)"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Determine build type and set variables
        id: build-type
        run: |
          if [[ "${{ github.event.pull_request.merged }}" == "true" ]]; then
            echo "BUILD_TYPE=production" >> $GITHUB_OUTPUT
            echo "BASE_URL=/" >> $GITHUB_OUTPUT
          else
            echo "BUILD_TYPE=staging" >> $GITHUB_OUTPUT
            echo "BASE_URL=/${{ github.event.repository.name }}/pr-preview-${{ github.event.number }}/" >> $GITHUB_OUTPUT
          fi

      - name: Debug Build Type
        run: |
          echo "Build type: ${{ steps.build-type.outputs.BUILD_TYPE }}"
          echo "Base URL: ${{ steps.build-type.outputs.BASE_URL }}"

      - name: Modify docusaurus.config.js
        run: |
          sed -i 's|baseUrl: '\''\/|baseUrl: '\''${{ steps.build-type.outputs.BASE_URL }}|' docusaurus.config.js
          
          if [[ "${{ steps.build-type.outputs.BUILD_TYPE }}" == "staging" ]]; then
            sed -i '/themeConfig:/,/^    }),/ {
              /^    }),/i\
        announcementBar: {\
          id: '\''staging-environment'\'',\
          content:\
            '\''⚠️ This is a <strong>Staging Environment</strong> for PR #${{ github.event.number }}. Changes may not be final.'\'',\
          backgroundColor: '\''#ffcc00'\'',\
          textColor: '\''#000000'\'',\
          isCloseable: false,\
        },
            }' docusaurus.config.js
          else
            # Remove announcement bar for production build
            sed -i '/announcementBar:/,/},/d' docusaurus.config.js
          fi
          
          echo "Modified docusaurus.config.js:"
          cat docusaurus.config.js

      - name: Build website
        run: npm run build

      - name: Debug Build Output
        run: |
          echo "Contents of build directory:"
          ls -R build

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build
          user_name: 'github-actions[bot]'
          user_email: '41898282+github-actions[bot]@users.noreply.github.com'
          commit_message: ${{ github.event.pull_request.merged && 'Deploy production site' || format('Deploy PR preview for #{0}', github.event.number) }}

      - name: Comment PR with preview URL
        if: steps.build-type.outputs.BUILD_TYPE == 'staging'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.number }}
          REPO_OWNER: ${{ github.repository_owner }}
          REPO_NAME: ${{ github.event.repository.name }}
        run: |
          gh pr comment $PR_NUMBER --body "Preview this PR at: https://$REPO_OWNER.github.io/$REPO_NAME/pr-preview-$PR_NUMBER/"

      - name: Cleanup PR preview
        if: github.event.pull_request.merged == true || github.event.pull_request.state == 'closed'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.number }}
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'
          git clone --single-branch --branch gh-pages https://${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git gh-pages
          cd gh-pages
          if [ -d "pr-preview-$PR_NUMBER" ]; then
            git rm -rf "pr-preview-$PR_NUMBER"
            git commit -m "Remove PR preview for #$PR_NUMBER"
            git push
          else
            echo "Preview folder for PR #$PR_NUMBER not found. Skipping cleanup."
          fi

      - name: Debug Deployment
        run: |
          echo "Deployment completed"
          echo "Build type: ${{ steps.build-type.outputs.BUILD_TYPE }}"
          echo "Target folder: ${{ steps.build-type.outputs.BUILD_TYPE == 'production' && 'root' || format('pr-preview-{0}', github.event.number) }}"