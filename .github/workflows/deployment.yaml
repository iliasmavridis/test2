name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main
  repository_dispatch:
    types: [preview-docs-pr-dep]
  pull_request:
    types: [closed]

jobs:
  queue:
    runs-on: ubuntu-latest
    if: github.event_name == 'repository_dispatch' && github.event.action == 'preview-docs-pr'
    steps:
      - uses: actions/checkout@v2
      - uses: ahmadnassri/action-workflow-queue@v1
        with:
          timeout: 3600000 # 1 hour timeout


  build:
    name: Build Docusaurus
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm

      - name: Install dependencies
        run: npm install --frozen-lockfile
      - name: Build website
        run: npm run build

      - name: Upload Build Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: build

  deploy-production:
    name: Deploy to GitHub Pages (Production)
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    concurrency: 
      group: ${{ github.workflow }}-production
      cancel-in-progress: false    
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  deploy-preview:
    name: Deploy PR Preview
    if: github.event_name == 'repository_dispatch' && github.event.action == 'preview-docs-pr'
    needs: build
    runs-on: ubuntu-latest
    env: # Set environment variables here
      REPO_OWNER: ${{ github.repository_owner }}
      REPO_NAME: ${{ github.event.repository.name }}
      PR_NUMBER: ${{ github.event.client_payload.pr_number }}    
    steps:
      - name: Deploy Preview to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.PAT }} 
          publish_dir: build
          destination_dir: pr-preview-${{ env.PR_NUMBER }}

      - name: Comment on PR in test
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.PAT }}
          script: |
            const pr_number = process.env.PR_NUMBER; // Use the environment variable
            if (!pr_number) {
              throw new Error('PR number not provided!');
            }

            const preview_url = `https://${process.env.REPO_OWNER}.github.io/${process.env.REPO_NAME}/pr-preview-${pr_number}`;
            const commentBody = "üìù This PR updates the documentation.\n\n" +
                               "üëâ Preview this PR at: " + preview_url + ".";

            await github.rest.issues.createComment({
              issue_number: ${pr_number},
              owner: process.env.REPO_OWNER,
              repo: process.env.REPO_NAME,
              body: commentBody
            });

  cleanup-pr-preview:
    name: Cleanup PR preview
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Cleanup PR preview
        env:
          GH_TOKEN: ${{ secrets.PAT }}
        run: |
          git config --global user.name 'github-actions[im]'
          git config --global user.email 'im@noreply.github.com'
          
          if [ -d "gh-pages" ]; then
            cd gh-pages
            git pull origin gh-pages
          else
            git clone --single-branch --branch gh-pages https://${{ secrets.PAT }}@github.com/${{ github.repository }}.git gh-pages
            cd gh-pages
          fi
          
          if [ -d "pr-preview-${{ github.event.pull_request.number }}" ]; then
            git rm -rf "pr-preview-${{ github.event.pull_request.number }}"
            git commit -m "Remove PR preview for #${{ github.event.pull_request.number }}"
            git push
          else
            echo "Preview folder for PR #${{ github.event.pull_request.number }} not found. Skipping cleanup."