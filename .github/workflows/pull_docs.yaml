name: Deploy to GitHub Pages

on:
  repository_dispatch:
    types: [docs-updated-on-main, preview-docs-pr]

env:
  NODE_OPTIONS: --max-old-space-size=5500

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout test repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          repository: iliasmavridis/test
          path: test
          ref: ${{ github.event.client_payload.sha || 'main' }}

      - uses: actions/checkout@v3
        name: "Checkout test2"
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: iliasmavridis/test2
          path: test2

      - name: Determine build type
        id: build-type
        run: |
          if [[ "${{ github.event.action }}" == "docs-updated-on-main" ]]; then
            echo "type=production" >> $GITHUB_OUTPUT
            echo "base_url=/test2/" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event.action }}" == "preview-docs-pr" ]]; then
            echo "type=staging" >> $GITHUB_OUTPUT
            echo "base_url=/test2/pr-preview-${{ github.event.client_payload.pr_number }}/" >> $GITHUB_OUTPUT
          else
            echo "Unknown event type" >> $GITHUB_OUTPUT
            exit 1
          fi

      # Copy content based on build type
      - name: Copy content for staging
        if: steps.build-type.outputs.type == 'staging'
        run: |
          # Clear destination folder
          rm -rf ./test2/docs/pr-preview-${{ github.event.client_payload.pr_number }}
          mkdir -p ./test2/docs/pr-preview-${{ github.event.client_payload.pr_number }}
          
          # Copy from test repo's docs folder to test2's pr-preview folder
          cp -r ./test/docs/* ./test2/docs/pr-preview-${{ github.event.client_payload.pr_number }}/

      - name: Copy content for production
        if: steps.build-type.outputs.type == 'production'
        run: |
          # Copy pr-preview content to main docs folder
          cp -r ./test2/docs/pr-preview-${{ github.event.client_payload.pr_number }}/* ./test2/docs/
          
          # Ensure we keep other pr-preview folders
          mkdir -p ./test2/docs/pr-preview-${{ github.event.client_payload.pr_number }}
          cp -r ./test2/docs/* ./test2/docs/pr-preview-${{ github.event.client_payload.pr_number }}/

      - name: Modify docusaurus.config.js for environment
        run: |
          cd test2
          # Replace baseUrl
          sed -i "s|baseUrl: '/test2/'|baseUrl: '${{ steps.build-type.outputs.base_url }}'|" docusaurus.config.js
          
          if [[ "${{ steps.build-type.outputs.type }}" == "staging" ]]; then
            # Create a temporary file with the announcement bar configuration
            cat << 'EOF' > temp_config.js
            const config = require('./docusaurus.config.js');
            
            config.themeConfig.announcementBar = {
              id: 'staging-environment',
              content: '‚ö†Ô∏è This is a <strong>Staging Environment</strong> for PR #${{ github.event.client_payload.pr_number }}. Changes may not be final. <strong>Do not use in production.</strong>',
              backgroundColor: '#ffcc00',
              textColor: '#000000',
              isCloseable: false,
            };
            
            module.exports = config;
            EOF
            
            # Replace the original config file
            mv temp_config.js docusaurus.config.js
          fi

      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: test2/package-lock.json

      - name: Install dependencies
        run: npm install --frozen-lockfile
        working-directory: ./test2

      - name: Build website
        run: npm run build
        working-directory: ./test2

      - name: Deploy to GitHub Pages (Staging)
        if: steps.build-type.outputs.type == 'staging'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.PAT }}
          publish_dir: ./test2/build
          publish_branch: gh-pages
          destination_dir: docs/pr-preview-${{ github.event.client_payload.pr_number }}
          repository: iliasmavridis/test2
          user_name: 'github-actions[test]'
          user_email: 'test@noreply.github.com'

      - name: Deploy to GitHub Pages (Production)
        if: steps.build-type.outputs.type == 'production'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.PAT }}
          publish_dir: ./test2/build
          publish_branch: main
          destination_dir: docs
          repository: iliasmavridis/test2
          user_name: 'github-actions[test]'
          user_email: 'test@noreply.github.com'

      - name: Comment on PR in test repo
        if: steps.build-type.outputs.type == 'staging'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.PAT }}
          script: |
            const pr_number = ${{ github.event.client_payload.pr_number }};
            const preview_url = `https://klutch.io/docs/pr-preview-${pr_number}`;
            const commentBody = "üìù This PR updates the documentation.\n\n" +
                              "üëâ Preview this PR at: " + preview_url + " .";

            await github.rest.issues.createComment({
              issue_number: parseInt(pr_number),
              owner: 'anynines',
              repo: 'test',
              body: commentBody
            });